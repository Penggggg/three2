"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MAX_PAGES = 9;
var whiteList = [];
var makeQuery = function (url) {
    var params = {};
    var path = url.split('?')[1];
    if (!path) {
        return params;
    }
    var paramsArr = path.split('&');
    paramsArr.map(function (paramsSet) {
        var _a;
        params = Object.assign({}, params, (_a = {},
            _a[paramsSet.split('=')[0]] = paramsSet.split('=')[1],
            _a));
    });
    return params;
};
var judgeEqual = function (obj1, obj2) {
    var key1 = Object.keys(obj1);
    var key2 = Object.keys(obj2);
    if (key1.length !== key2.length) {
        return;
    }
    return !key1.some(function (keyx1) { return obj1[keyx1] !== obj2[keyx1]; });
};
exports.navTo = function (url) {
    var pages = getCurrentPages();
    var pageLen = pages.length;
    var params = makeQuery(url);
    var existedTarget = pages.find(function (x) { return "/" + x.route === url.split('?')[0]; });
    var existedIndex = pages.findIndex(function (x) { return "/" + x.route === url.split('?')[0]; });
    if (!!existedTarget) {
        var isParamEqual = judgeEqual(params, existedTarget.options);
        if (isParamEqual || whiteList.findIndex(function (x) { return x === url.split('?')[0]; }) !== -1) {
            wx.navigateBack({
                delta: pageLen - existedIndex - 1
            });
        }
        else {
            if (pageLen < MAX_PAGES) {
                wx.navigateTo({
                    url: url
                });
            }
            else {
                wx.redirectTo({
                    url: url
                });
            }
        }
    }
    else {
        if (pageLen < MAX_PAGES) {
            wx.navigateTo({
                url: url
            });
        }
        else {
            wx.redirectTo({
                url: url
            });
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sU0FBUyxHQUFHLENBQUMsQ0FBQztBQUdwQixJQUFNLFNBQVMsR0FBRyxFQUVqQixDQUFDO0FBR0YsSUFBTSxTQUFTLEdBQUcsVUFBRSxHQUFXO0lBQzNCLElBQUksTUFBTSxHQUFHLEVBQUcsQ0FBQztJQUNqQixJQUFNLElBQUksR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFFLENBQUMsQ0FBRSxDQUFDO0lBRWpDLElBQUssQ0FBQyxJQUFJLEVBQUc7UUFDVCxPQUFPLE1BQU0sQ0FBQztLQUNqQjtJQUVELElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEMsU0FBUyxDQUFDLEdBQUcsQ0FBRSxVQUFBLFNBQVM7O1FBQ3BCLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUcsRUFBRSxNQUFNO1lBQzlCLEdBQUUsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBRSxDQUFDLENBQUUsSUFBSSxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFFLENBQUMsQ0FBRTtnQkFDMUQsQ0FBQTtJQUNOLENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQyxDQUFDO0FBTUYsSUFBTSxVQUFVLEdBQUcsVUFBRSxJQUFZLEVBQUUsSUFBWTtJQUMzQyxJQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFFLElBQUksQ0FBRSxDQUFDO0lBQ2pDLElBQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFFLENBQUM7SUFDakMsSUFBSyxJQUFJLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxNQUFNLEVBQUc7UUFBRSxPQUFPO0tBQUU7SUFDOUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUUsVUFBQSxLQUFLLElBQUksT0FBQSxJQUFJLENBQUUsS0FBSyxDQUFFLEtBQUssSUFBSSxDQUFFLEtBQUssQ0FBRSxFQUEvQixDQUErQixDQUFDLENBQUM7QUFDakUsQ0FBQyxDQUFDO0FBT1csUUFBQSxLQUFLLEdBQUcsVUFBRSxHQUFXO0lBRTFCLElBQU0sS0FBSyxHQUFHLGVBQWUsRUFBRyxDQUFDO0lBQ2pDLElBQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDN0IsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFFLEdBQUcsQ0FBRSxDQUFDO0lBQ2hDLElBQU0sYUFBYSxHQUFRLEtBQUssQ0FBQyxJQUFJLENBQUUsVUFBQSxDQUFDLElBQUksT0FBQSxNQUFJLENBQUMsQ0FBQyxLQUFPLEtBQUssR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBRSxDQUFDLENBQUUsRUFBckMsQ0FBcUMsQ0FBQyxDQUFDO0lBQ25GLElBQU0sWUFBWSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUUsVUFBQSxDQUFDLElBQUksT0FBQSxNQUFJLENBQUMsQ0FBQyxLQUFPLEtBQUssR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBRSxDQUFDLENBQUUsRUFBckMsQ0FBcUMsQ0FBQyxDQUFDO0lBR2xGLElBQUssQ0FBQyxDQUFDLGFBQWEsRUFBRztRQUVuQixJQUFNLFlBQVksR0FBRyxVQUFVLENBQUUsTUFBTSxFQUFFLGFBQWEsQ0FBQyxPQUFPLENBQUUsQ0FBQztRQUVqRSxJQUFLLFlBQVksSUFBSSxTQUFTLENBQUMsU0FBUyxDQUFFLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUUsQ0FBQyxDQUFFLEVBQXpCLENBQXlCLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRztZQUcvRSxFQUFFLENBQUMsWUFBWSxDQUFDO2dCQUNaLEtBQUssRUFBRSxPQUFPLEdBQUcsWUFBWSxHQUFHLENBQUM7YUFDcEMsQ0FBQyxDQUFDO1NBR047YUFBTTtZQUdILElBQUssT0FBTyxHQUFHLFNBQVMsRUFBRztnQkFDdkIsRUFBRSxDQUFDLFVBQVUsQ0FBQztvQkFDVixHQUFHLEtBQUE7aUJBQ04sQ0FBQyxDQUFDO2FBR047aUJBQU07Z0JBQ0gsRUFBRSxDQUFDLFVBQVUsQ0FBQztvQkFDVixHQUFHLEtBQUE7aUJBQ04sQ0FBQyxDQUFDO2FBQ047U0FDSjtLQUVKO1NBQU07UUFHSCxJQUFLLE9BQU8sR0FBRyxTQUFTLEVBQUc7WUFDdkIsRUFBRSxDQUFDLFVBQVUsQ0FBQztnQkFDVixHQUFHLEtBQUE7YUFDTixDQUFDLENBQUM7U0FHTjthQUFNO1lBQ0gsRUFBRSxDQUFDLFVBQVUsQ0FBQztnQkFDVixHQUFHLEtBQUE7YUFDTixDQUFDLENBQUM7U0FDTjtLQUNKO0FBQ1QsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTUFYX1BBR0VTID0gOTtcblxuLyoqIOWMuemFjeWIsHVybO+8jOS9huaYr+S4jeeUqOWMuemFjXF1ZXJ5ICovXG5jb25zdCB3aGl0ZUxpc3QgPSBbXG4gICBcbl07XG5cbi8qKiDmoLnmja51cmwg6L+U5ZuecGFyYW3lr7nosaEgKi9cbmNvbnN0IG1ha2VRdWVyeSA9ICggdXJsOiBzdHJpbmcgKSA9PiB7XG4gICAgbGV0IHBhcmFtcyA9IHsgfTtcbiAgICBjb25zdCBwYXRoID0gdXJsLnNwbGl0KCc/JylbIDEgXTtcblxuICAgIGlmICggIXBhdGggKSB7XG4gICAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgfVxuXG4gICAgY29uc3QgcGFyYW1zQXJyID0gcGF0aC5zcGxpdCgnJicpO1xuICAgIHBhcmFtc0Fyci5tYXAoIHBhcmFtc1NldCA9PiB7XG4gICAgICAgIHBhcmFtcyA9IE9iamVjdC5hc3NpZ24oeyB9LCBwYXJhbXMsIHtcbiAgICAgICAgICAgIFsgcGFyYW1zU2V0LnNwbGl0KCc9JylbIDAgXV06ICBwYXJhbXNTZXQuc3BsaXQoJz0nKVsgMSBdXG4gICAgICAgIH0pXG4gICAgfSk7XG4gICAgcmV0dXJuIHBhcmFtcztcbn07XG5cbi8qKiBcbiAqICEg5q2k5Ye95pWw5pyJ5ryP5rSeXG4gKiDliKTmlq3kuKTkuKpwYXJhbXPlr7nosaHmmK/lkKbnm7jnrYlcbiAqL1xuY29uc3QganVkZ2VFcXVhbCA9ICggb2JqMTogb2JqZWN0LCBvYmoyOiBvYmplY3QgKSA9PiB7XG4gICAgY29uc3Qga2V5MSA9IE9iamVjdC5rZXlzKCBvYmoxICk7XG4gICAgY29uc3Qga2V5MiA9IE9iamVjdC5rZXlzKCBvYmoyICk7XG4gICAgaWYgKCBrZXkxLmxlbmd0aCAhPT0ga2V5Mi5sZW5ndGggKSB7IHJldHVybjsgfVxuICAgIHJldHVybiAha2V5MS5zb21lKCBrZXl4MSA9PiBvYmoxWyBrZXl4MSBdICE9PSBvYmoyWyBrZXl4MSBdKTtcbn07XG5cbi8qKlxuICogXG4gKiDov57nu60y5Liq55u45ZCMdXJs77yM5LiN5ZCMcXVlcnnvvIxcbiAqIEEgLT4gQiDnmoTml7blgJnvvIxxdWVyeeWPguaVsOWPr+iDveaciemXrumimFxuICovXG5leHBvcnQgY29uc3QgbmF2VG8gPSAoIHVybDogc3RyaW5nICkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHBhZ2VzID0gZ2V0Q3VycmVudFBhZ2VzKCApO1xuICAgICAgICBjb25zdCBwYWdlTGVuID0gcGFnZXMubGVuZ3RoO1xuICAgICAgICBjb25zdCBwYXJhbXMgPSBtYWtlUXVlcnkoIHVybCApO1xuICAgICAgICBjb25zdCBleGlzdGVkVGFyZ2V0OiBhbnkgPSBwYWdlcy5maW5kKCB4ID0+IGAvJHt4LnJvdXRlfWAgPT09IHVybC5zcGxpdCgnPycpWyAwIF0pO1xuICAgICAgICBjb25zdCBleGlzdGVkSW5kZXggPSBwYWdlcy5maW5kSW5kZXgoIHggPT4gYC8ke3gucm91dGV9YCA9PT0gdXJsLnNwbGl0KCc/JylbIDAgXSk7XG5cbiAgICAgICAgLy8g5aaC5p6c5om+5Yiw5Y6G5Y+y6Lev55SxXG4gICAgICAgIGlmICggISFleGlzdGVkVGFyZ2V0ICkge1xuXG4gICAgICAgICAgICBjb25zdCBpc1BhcmFtRXF1YWwgPSBqdWRnZUVxdWFsKCBwYXJhbXMsIGV4aXN0ZWRUYXJnZXQub3B0aW9ucyApO1xuXG4gICAgICAgICAgICBpZiAoIGlzUGFyYW1FcXVhbCB8fCB3aGl0ZUxpc3QuZmluZEluZGV4KCB4ID0+IHggPT09IHVybC5zcGxpdCgnPycpWyAwIF0pICE9PSAtMSApIHtcblxuICAgICAgICAgICAgICAgIC8vIOWPguaVsOWMuemFjeaIluiAheWtmOWcqOeZveWQjeWNleeahOaDheWGteS4i++8jOeri+mprOi/lOWbnlxuICAgICAgICAgICAgICAgIHd4Lm5hdmlnYXRlQmFjayh7XG4gICAgICAgICAgICAgICAgICAgIGRlbHRhOiBwYWdlTGVuIC0gZXhpc3RlZEluZGV4IC0gMVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyB1cmzljLnphY3vvIzkvYbmmK/lj4LmlbDkuI3ljLnphY1cbiAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICAvLyDmib7kuI3liLDvvIzkuJTkuI3otoXov4dtYXhcbiAgICAgICAgICAgICAgICBpZiAoIHBhZ2VMZW4gPCBNQVhfUEFHRVMgKSB7XG4gICAgICAgICAgICAgICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy8g5om+5LiN5Yiw77yM5LiU6LaF6L+H5LqGbWF4XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgd3gucmVkaXJlY3RUbyh7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIC8vIOaJvuS4jeWIsO+8jOS4lOS4jei2hei/h21heFxuICAgICAgICAgICAgaWYgKCBwYWdlTGVuIDwgTUFYX1BBR0VTICkge1xuICAgICAgICAgICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgICAgICAgICB1cmxcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8g5om+5LiN5Yiw77yM5LiU6LaF6L+H5LqGbWF4XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHd4LnJlZGlyZWN0VG8oe1xuICAgICAgICAgICAgICAgICAgICB1cmxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxufTsiXX0=