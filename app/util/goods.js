"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var delayeringGood = function (x) {
    if (!x) {
        return null;
    }
    var stock = x.stock;
    var price = x.price;
    var priceGap = 0;
    var lowest_price = x.groupPrice || x.price;
    if (x.standards.length === 0) {
        stock = x.stock;
        price = x.price;
    }
    else if (x.standards.length === 1) {
        stock = x.standards[0].stock;
        price = x.standards[0].price;
        if (!x.standards[0].groupPrice) {
            lowest_price = lowest_price < x.standards[0].price ?
                lowest_price :
                x.standards[0].price;
        }
        else {
            lowest_price = lowest_price < x.standards[0].groupPrice ?
                lowest_price :
                x.standards[0].groupPrice;
        }
    }
    else if (x.standards.length > 1) {
        var sortedPrice = x.standards.sort(function (x, y) { return x.price - y.price; });
        if (sortedPrice[0].price === sortedPrice[sortedPrice.length - 1].price) {
            price = sortedPrice[0].price;
        }
        else {
            price = sortedPrice[0].price + "~" + sortedPrice[sortedPrice.length - 1].price;
        }
        var sortedStock = x.standards.filter(function (i) { return i.stock !== undefined && i.stock !== null; }).sort(function (x, y) { return x.stock - y.stock; });
        if (sortedStock.length === 1) {
            stock = "" + sortedStock[0].stock;
        }
        else if (sortedStock.length > 1) {
            if (sortedStock[0].stock === sortedStock[sortedStock.length - 1].stock) {
                stock = "" + sortedStock[0].stock;
            }
            else {
                stock = sortedStock[0].stock + "~" + sortedStock[sortedStock.length - 1].stock;
            }
        }
        var priceList_1 = [];
        x.standards.map(function (s) {
            if (!s.groupPrice) {
                priceList_1.push(s.price);
            }
            else {
                priceList_1.push(s.groupPrice < s.price ?
                    s.groupPrice :
                    s.price);
            }
        });
        priceList_1 = priceList_1.sort(function (x, y) { return x - y; });
        lowest_price = priceList_1[0];
    }
    if (x.standards.length === 0) {
        if (x.groupPrice !== null && x.groupPrice !== undefined) {
            priceGap = x.price - x.groupPrice;
        }
        else {
            priceGap = 0;
        }
    }
    else {
        var groupPrice = x.standards.filter(function (x) { return x.groupPrice !== null && x.groupPrice !== undefined; });
        if (groupPrice.length > 0) {
            var sortedGroupPrice = groupPrice.sort(function (x, y) { return ((x.groupPrice - x.price) - (y.groupPrice - y.price)); });
            if ((sortedGroupPrice[0].groupPrice - sortedGroupPrice[0].price) ===
                (sortedGroupPrice[sortedGroupPrice.length - 1].groupPrice - sortedGroupPrice[sortedGroupPrice.length - 1].price)) {
                priceGap = (sortedGroupPrice[0].price - sortedGroupPrice[0].groupPrice);
            }
            else {
                priceGap = sortedGroupPrice[sortedGroupPrice.length - 1].price - sortedGroupPrice[sortedGroupPrice.length - 1].groupPrice + "~" + (sortedGroupPrice[0].price - sortedGroupPrice[0].groupPrice);
            }
        }
        else {
            priceGap = 0;
        }
    }
    return Object.assign({}, x, {
        pid: x._id,
        stock$: stock,
        price$: price,
        priceGap: priceGap,
        lowest_price$: lowest_price
    });
};
exports.delayeringGood = delayeringGood;
//# sourceMappingURL=data:application/json;base64,