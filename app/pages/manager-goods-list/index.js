"use strict";
Page({
    data: {
        page: 0,
        totalPage: 1,
        search: '',
        list: [],
        stockNeed: [],
        loadingList: false,
        canLoadMore: true,
        lastSearch: ''
    },
    navigate: function (e) {
        wx.navigateTo({
            url: e.currentTarget.dataset.url || '/pages/manager-goods-detail/index',
        });
    },
    fetchData: function () {
        var that = this;
        var _a = this.data, canLoadMore = _a.canLoadMore, loadingList = _a.loadingList, lastSearch = _a.lastSearch, search = _a.search;
        if (loadingList || !canLoadMore) {
            return;
        }
        if (search.replace(/\s+/g, "") !== lastSearch) {
            this.setData({
                page: 0,
                totalPage: 1
            });
        }
        this.setData({
            loadingList: true
        });
        wx.showLoading({
            title: '加载中...',
        });
        wx.cloud.callFunction({
            name: 'api-goods-list',
            data: {
                page: this.data.page + 1,
                title: this.data.search
            },
            success: function (res) {
                console.log(res.result.data);
                var _a = res.result, status = _a.status, data = _a.data;
                if (status === 200) {
                    var page = data.page, totalPage = data.totalPage, search_1 = data.search;
                    that.setData({
                        page: page,
                        totalPage: totalPage,
                        lastSearch: search_1 || '',
                        canLoadMore: totalPage > page
                    });
                    if (data.data && data.data.length > 0) {
                        var meta = page === 1 ?
                            that.dealListText(data.data) : that.data.list.concat(that.dealListText(data.data));
                        that.setData({
                            list: meta
                        });
                    }
                    else {
                        that.setData({
                            list: []
                        });
                    }
                }
                wx.hideLoading({});
                that.setData({
                    loadingList: false
                });
            },
            fail: function () {
                wx.showToast({
                    icon: 'none',
                    title: '获取数据错误',
                });
                wx.hideLoading({});
                that.setData({
                    loadingList: false
                });
            }
        });
    },
    onInput: function (_a) {
        var detail = _a.detail;
        this.setData({
            search: detail.value,
            canLoadMore: detail.value.replace(/\s+/g, "") !== this.data.lastSearch
        });
    },
    dealListText: function (list) {
        var that = this;
        return list.map(function (x) {
            var stock = x.stock;
            var price = x.price;
            if (x.standards.length === 1) {
                stock = x.standards[0].stock;
                price = x.standards[0].price;
            }
            else if (x.standards.length > 1) {
                var sortedPrice = x.standards.sort(function (x, y) { return x.price - y.price; });
                if (sortedPrice[0].price === sortedPrice[sortedPrice.length - 1].price) {
                    price = sortedPrice[0].price;
                }
                else {
                    price = sortedPrice[0].price + "~" + sortedPrice[sortedPrice.length - 1].price;
                }
                var sortedStock = x.standards.filter(function (i) { return i.stock !== undefined && i.stock !== null; }).sort(function (x, y) { return x.stock - y.stock; });
                if (sortedStock.length === 1) {
                    stock = "" + sortedStock[0].stock;
                }
                else if (sortedStock.length > 1) {
                    if (sortedStock[0].stock === sortedStock[sortedStock.length - 1].stock) {
                        stock = "" + sortedStock[0].stock;
                    }
                    else {
                        stock = sortedStock[0].stock + "~" + sortedStock[sortedStock.length - 1].stock;
                    }
                }
            }
            var origin = that.data.stockNeed.slice();
            origin.push(((stock !== undefined) && (Number(stock.split('~')[0]) < 10)));
            that.setData({
                stockNeed: origin
            });
            return Object.assign({}, x, {
                stock: stock,
                price: price
            });
        });
    },
    onTab: function (_a) {
        var currentTarget = _a.currentTarget;
        var pid = currentTarget.dataset.pid;
        wx.navigateTo({
            url: "/pages/goods-detail/index?id=" + pid
        });
    },
    onLoad: function (options) {
    },
    onReady: function () {
    },
    onShow: function () {
        this.fetchData();
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,