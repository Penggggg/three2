"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../util/http");
var route_js_1 = require("../../util/route.js");
var form_id_1 = require("../../util/form-id");
Page({
    data: {
        page: 0,
        totalPage: 1,
        search: '',
        list: [],
        loadingList: false,
        canLoadMore: true,
        lastSearch: '',
        isNotAvailableTrip: false,
        bgs: [
            'background-image: linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%);',
            'background-image: linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%);',
            'background-image: linear-gradient(120deg, #89f7fe 0%, #66a6ff 100%);',
            'background-image: linear-gradient(to top, #37ecba 0%, #72afd3 100%);',
            'background-image: linear-gradient(-45deg, #FFC796 0%, #FF6B95 100%);',
            'background-image: linear-gradient(-225deg, #20E2D7 0%, #F9FEA5 100%);',
            'background-image: linear-gradient(-225deg, #9EFBD3 0%, #57E9F2 48%, #45D4FB 100%);',
        ]
    },
    navigate: function (e) {
        form_id_1.createFormId(e.detail.formId);
        route_js_1.navTo('/pages/manager-trip-detail/index');
    },
    onConformSearch: function (_a) {
        var detail = _a.detail;
        this.setData({
            page: 0,
            totalPage: 0,
            search: detail,
            canLoadMore: true
        });
        this.fetchData();
    },
    fetchData: function () {
        var _this = this;
        var _a = this.data, canLoadMore = _a.canLoadMore, loadingList = _a.loadingList, lastSearch = _a.lastSearch, search = _a.search;
        if (loadingList || !canLoadMore) {
            return;
        }
        if (search.replace(/\s+/g, "") !== lastSearch) {
            this.setData({
                page: 0,
                totalPage: 1
            });
        }
        this.setData({
            loadingList: true
        });
        http_1.http({
            data: {
                page: this.data.page + 1,
                title: this.data.search
            },
            errMsg: '加载失败，请重试',
            loadingMsg: '加载中...',
            url: "trip_list",
            success: function (res) {
                var status = res.status, data = res.data;
                if (status === 200) {
                    var page = data.page, totalPage = data.totalPage, search_1 = data.search;
                    _this.setData({
                        page: page,
                        totalPage: totalPage,
                        lastSearch: search_1 || '',
                        canLoadMore: totalPage > page,
                        isNotAvailableTrip: !data.data.some(function (x) { return x.published === true && new Date().getTime() < x.start_date; })
                    });
                    if (data.data && data.data.length > 0) {
                        var meta = page === 1 ?
                            _this.dealListText(data.data) : _this.data.list.concat(_this.dealListText(data.data));
                        _this.setData({
                            list: meta
                        });
                    }
                    else {
                        _this.setData({
                            list: []
                        });
                    }
                }
                _this.setData({
                    loadingList: false
                });
            }
        });
    },
    dealListText: function (list) {
        var simpleTime = function (ts) {
            var time = new Date(Number(ts));
            return time.getMonth() + 1 + "\u6708" + time.getDate() + "\u65E5";
        };
        var simpleTime2 = function (ts) {
            var time = new Date(Number(ts));
            return time.getMonth() + 1 + "." + time.getDate();
        };
        var meta = list.map(function (x, k) {
            var _id = x._id, title = x.title, sales_volume = x.sales_volume, start_date = x.start_date, published = x.published, end_date = x.end_date, orders = x.orders, isClosed = x.isClosed, clients = x.clients, notPayAllClients = x.notPayAllClients;
            var state$ = !published ?
                '未发布' :
                isClosed ?
                    '已关闭' :
                    new Date().getTime() >= end_date ?
                        '已结束' :
                        new Date().getTime() >= start_date ?
                            '进行中' :
                            '即将开始';
            return {
                _id: _id,
                title: title,
                orders: orders,
                bg: k % 7,
                sales_volume: sales_volume,
                state: state$,
                isClosed: isClosed,
                clients: clients,
                notPayAllClients: notPayAllClients,
                ing: state$ === '进行中',
                endDate: simpleTime(end_date),
                startDate: simpleTime(start_date),
                endDate2: simpleTime2(end_date),
                startDate2: simpleTime2(start_date),
                red: state$ === '未发布' || state$ === '进行中' || state$ === '即将开始',
            };
        });
        return meta;
    },
    onInput: function (_a) {
        var detail = _a.detail;
        this.setData({
            search: detail.value,
            canLoadMore: detail.value.replace(/\s+/g, "") !== this.data.lastSearch
        });
    },
    onTab: function (_a) {
        var currentTarget = _a.currentTarget, detail = _a.detail;
        form_id_1.createFormId(detail.formId);
        var tid = currentTarget.dataset.tid;
        route_js_1.navTo("/pages/manager-trip-detail/index?id=" + tid);
    },
    goOrder: function (_a) {
        var currentTarget = _a.currentTarget, detail = _a.detail;
        var tid = currentTarget.dataset.tid;
        form_id_1.createFormId(detail.formId);
        route_js_1.navTo("/pages/manager-trip-order/index?id=" + tid);
    },
    onLoad: function () {
        wx.hideShareMenu({});
    },
    onReady: function () {
    },
    onShow: function () {
        this.setData({
            page: 0,
            canLoadMore: true
        });
        this.fetchData();
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHdDQUF1QztBQUN2QyxnREFBNEM7QUFDNUMsOENBQWtEO0FBR2xELElBQUksQ0FBQztJQU1ELElBQUksRUFBRTtRQUVGLElBQUksRUFBRSxDQUFDO1FBRVAsU0FBUyxFQUFFLENBQUM7UUFFWixNQUFNLEVBQUUsRUFBRTtRQUVWLElBQUksRUFBRSxFQUFHO1FBRVQsV0FBVyxFQUFFLEtBQUs7UUFFbEIsV0FBVyxFQUFFLElBQUk7UUFFakIsVUFBVSxFQUFFLEVBQUU7UUFFZCxrQkFBa0IsRUFBRSxLQUFLO1FBRXpCLEdBQUcsRUFBRTtZQUNELHNFQUFzRTtZQUN0RSxrRkFBa0Y7WUFDbEYsc0VBQXNFO1lBQ3RFLHNFQUFzRTtZQUN0RSxzRUFBc0U7WUFDdEUsdUVBQXVFO1lBQ3ZFLG9GQUFvRjtTQUN2RjtLQUNKO0lBR0QsUUFBUSxZQUFFLENBQUM7UUFDUCxzQkFBWSxDQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFFLENBQUM7UUFDaEMsZ0JBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFHRCxlQUFlLFlBQUMsRUFBVTtZQUFSLGtCQUFNO1FBQ3BCLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDVixJQUFJLEVBQUUsQ0FBQztZQUNQLFNBQVMsRUFBRSxDQUFDO1lBQ1osTUFBTSxFQUFFLE1BQU07WUFDZCxXQUFXLEVBQUUsSUFBSTtTQUNwQixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsU0FBUyxFQUFHLENBQUM7SUFDdEIsQ0FBQztJQUdELFNBQVM7UUFBVCxpQkE4REM7UUE1RFMsSUFBQSxjQUE0RCxFQUExRCw0QkFBVyxFQUFFLDRCQUFXLEVBQUUsMEJBQVUsRUFBRSxrQkFBb0IsQ0FBQztRQUVuRSxJQUFLLFdBQVcsSUFBSSxDQUFDLFdBQVcsRUFBRztZQUMvQixPQUFPO1NBQ1Y7UUFF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aHR0cCB9IGZyb20gJy4uLy4uL3V0aWwvaHR0cCc7XG5pbXBvcnQgeyBuYXZUbyB9IGZyb20gJy4uLy4uL3V0aWwvcm91dGUuanMnO1xuaW1wb3J0IHsgY3JlYXRlRm9ybUlkIH0gZnJvbSAnLi4vLi4vdXRpbC9mb3JtLWlkJztcblxuLy8gYXBwL3BhZ2VzL21hbmFnZXItZ29vZHMtZGV0YWlsL2luZGV4LmpzXG5QYWdlKHtcblxuICAgIC8qKlxuICAgICAqIOmhtemdoueahOWIneWni+aVsOaNrlxuICAgICAqICEg5YiX6KGo5bGV56S657u05bqm77ya5ZCN56ew44CB6ZSA5ZSu6aKd44CB6K6i5Y2V5pWw44CB54q25oCB44CB5byA5aeL5pe26Ze0XG4gICAgICovXG4gICAgZGF0YToge1xuICAgICAgICAvLyDlvZPliY3pobXnoIFcbiAgICAgICAgcGFnZTogMCxcbiAgICAgICAgLy8g5oC76aG15pWwXG4gICAgICAgIHRvdGFsUGFnZTogMSxcbiAgICAgICAgLy8g5pCc57SiXG4gICAgICAgIHNlYXJjaDogJycsXG4gICAgICAgIC8vIOWVhuWTgeWIl+ihqFxuICAgICAgICBsaXN0OiBbIF0sXG4gICAgICAgIC8vIOWKoOi9veWIl+ihqGluZ1xuICAgICAgICBsb2FkaW5nTGlzdDogZmFsc2UsXG4gICAgICAgIC8vIOiDveWQpue7p+e7reWKoOi9vVxuICAgICAgICBjYW5Mb2FkTW9yZTogdHJ1ZSxcbiAgICAgICAgLy8g5LiK5qyh5pCc57Si55qE5paH5pysXG4gICAgICAgIGxhc3RTZWFyY2g6ICcnLFxuICAgICAgICAvLyDmmK/lkKblt7Lnu4/msqHmnInkuIvkuIDkuKrlj6/nlKjooYznqItcbiAgICAgICAgaXNOb3RBdmFpbGFibGVUcmlwOiBmYWxzZSxcbiAgICAgICAgLy8g6IOM5pmv5qC35byPXG4gICAgICAgIGJnczogW1xuICAgICAgICAgICAgJ2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsICM4NGZhYjAgMCUsICM4ZmQzZjQgMTAwJSk7JyxcbiAgICAgICAgICAgICdiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNmZjlhOWUgMCUsICNmYWQwYzQgOTklLCAjZmFkMGM0IDEwMCUpOycsXG4gICAgICAgICAgICAnYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgIzg5ZjdmZSAwJSwgIzY2YTZmZiAxMDAlKTsnLFxuICAgICAgICAgICAgJ2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICMzN2VjYmEgMCUsICM3MmFmZDMgMTAwJSk7JyxcbiAgICAgICAgICAgICdiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAjRkZDNzk2IDAlLCAjRkY2Qjk1IDEwMCUpOycsXG4gICAgICAgICAgICAnYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KC0yMjVkZWcsICMyMEUyRDcgMCUsICNGOUZFQTUgMTAwJSk7JyxcbiAgICAgICAgICAgICdiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoLTIyNWRlZywgIzlFRkJEMyAwJSwgIzU3RTlGMiA0OCUsICM0NUQ0RkIgMTAwJSk7JyxcbiAgICAgICAgXVxuICAgIH0sXG5cbiAgICAvKiog6Lez6aG1ICovXG4gICAgbmF2aWdhdGUoIGUgKSB7XG4gICAgICAgIGNyZWF0ZUZvcm1JZCggZS5kZXRhaWwuZm9ybUlkICk7XG4gICAgICAgIG5hdlRvKCcvcGFnZXMvbWFuYWdlci10cmlwLWRldGFpbC9pbmRleCcpO1xuICAgIH0sXG5cbiAgICAvKiog6L6T5YWl5qGG56Gu6K6kICovXG4gICAgb25Db25mb3JtU2VhcmNoKHsgZGV0YWlsIH0pIHtcbiAgICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgICAgICBwYWdlOiAwLFxuICAgICAgICAgICAgdG90YWxQYWdlOiAwLFxuICAgICAgICAgICAgc2VhcmNoOiBkZXRhaWwsXG4gICAgICAgICAgICBjYW5Mb2FkTW9yZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5mZXRjaERhdGEoICk7XG4gICAgfSxcblxuICAgIC8qKiDmi4nlj5bliJfooaggKi9cbiAgICBmZXRjaERhdGEoICkge1xuXG4gICAgICAgIGNvbnN0IHsgY2FuTG9hZE1vcmUsIGxvYWRpbmdMaXN0LCBsYXN0U2VhcmNoLCBzZWFyY2ggfSA9IHRoaXMuZGF0YTtcblxuICAgICAgICBpZiAoIGxvYWRpbmdMaXN0IHx8ICFjYW5Mb2FkTW9yZSApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICggc2VhcmNoLnJlcGxhY2UoL1xccysvZywgXCJcIikgIT09IGxhc3RTZWFyY2ggKSB7XG4gICAgICAgICAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgICAgICAgICAgICBwYWdlOiAwLFxuICAgICAgICAgICAgICAgIHRvdGFsUGFnZTogMVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgICAgICAgIGxvYWRpbmdMaXN0OiB0cnVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGh0dHAoe1xuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIHBhZ2U6IHRoaXMuZGF0YS5wYWdlICsgMSxcbiAgICAgICAgICAgICAgICB0aXRsZTogdGhpcy5kYXRhLnNlYXJjaFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVyck1zZzogJ+WKoOi9veWksei0pe+8jOivt+mHjeivlScsXG4gICAgICAgICAgICBsb2FkaW5nTXNnOiAn5Yqg6L295LitLi4uJyxcbiAgICAgICAgICAgIHVybDogYHRyaXBfbGlzdGAsXG4gICAgICAgICAgICBzdWNjZXNzOiByZXMgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgc3RhdHVzLCBkYXRhIH0gPSByZXM7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKCBzdGF0dXMgPT09IDIwMCApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwYWdlLCB0b3RhbFBhZ2UsIHNlYXJjaCB9ID0gZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUGFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RTZWFyY2g6IHNlYXJjaCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbkxvYWRNb3JlOiB0b3RhbFBhZ2UgPiBwYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNOb3RBdmFpbGFibGVUcmlwOiAhZGF0YS5kYXRhLnNvbWUoIHggPT4geC5wdWJsaXNoZWQgPT09IHRydWUgJiYgbmV3IERhdGUoICkuZ2V0VGltZSggKSA8IHguc3RhcnRfZGF0ZSApXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgaWYgKCBkYXRhLmRhdGEgJiYgZGF0YS5kYXRhLmxlbmd0aCA+IDAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXRhID0gcGFnZSA9PT0gMSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGVhbExpc3RUZXh0KCBkYXRhLmRhdGEgKTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbIC4uLnRoaXMuZGF0YS5saXN0LCAuLi50aGlzLmRlYWxMaXN0VGV4dCggZGF0YS5kYXRhICldO1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Q6IG1ldGFcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdDogWyBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ0xpc3Q6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvKiog57yW6L6R6KGM56iL5YiX6KGo5paH5a2XICovXG4gICAgZGVhbExpc3RUZXh0KCBsaXN0ICkge1xuXG4gICAgICAgIGNvbnN0IHNpbXBsZVRpbWUgPSAodHM6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGltZSA9IG5ldyBEYXRlKCBOdW1iZXIoIHRzICkpO1xuICAgICAgICAgICAgcmV0dXJuIGAke3RpbWUuZ2V0TW9udGgoICkrMX3mnIgke3RpbWUuZ2V0RGF0ZSggKX3ml6VgXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3Qgc2ltcGxlVGltZTIgPSAodHM6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGltZSA9IG5ldyBEYXRlKCBOdW1iZXIoIHRzICkpO1xuICAgICAgICAgICAgcmV0dXJuIGAke3RpbWUuZ2V0TW9udGgoICkrMX0uJHt0aW1lLmdldERhdGUoICl9YFxuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiAhIOazqOaEj++8jOaXtumXtOWvueavlOOAguW8gOWni+aXtumXtOaYryDmjIflrprml6XmnJ/nmoTml6nkuIo454K577yb57uT5p2f5pel5pyf5pivIOaMh+WumuaXpeacn+eahOaZmuS4ijI0OjAwXG4gICAgICAgICAqL1xuICAgICAgICBjb25zdCBtZXRhID0gbGlzdC5tYXAoKCB4LCBrICkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBfaWQsIHRpdGxlLCBzYWxlc192b2x1bWUsIHN0YXJ0X2RhdGUsIHB1Ymxpc2hlZCwgZW5kX2RhdGUsIG9yZGVycywgaXNDbG9zZWQsIGNsaWVudHMsIG5vdFBheUFsbENsaWVudHMgfSA9IHg7XG5cbiAgICAgICAgICAgIGNvbnN0IHN0YXRlJCA9ICFwdWJsaXNoZWQgP1xuICAgICAgICAgICAgICAgICfmnKrlj5HluIMnIDpcbiAgICAgICAgICAgICAgICBpc0Nsb3NlZCA/XG4gICAgICAgICAgICAgICAgICAgICflt7LlhbPpl60nIDpcbiAgICAgICAgICAgICAgICAgICAgbmV3IERhdGUoICkuZ2V0VGltZSggKSA+PSBlbmRfZGF0ZSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAn5bey57uT5p2fJyA6XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgRGF0ZSggKS5nZXRUaW1lKCApID49IHN0YXJ0X2RhdGUgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICfov5vooYzkuK0nIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAn5Y2z5bCG5byA5aeLJztcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBfaWQsXG4gICAgICAgICAgICAgICAgdGl0bGUsXG4gICAgICAgICAgICAgICAgb3JkZXJzLFxuICAgICAgICAgICAgICAgIGJnOiBrICUgNyxcbiAgICAgICAgICAgICAgICBzYWxlc192b2x1bWUsXG4gICAgICAgICAgICAgICAgc3RhdGU6IHN0YXRlJCxcbiAgICAgICAgICAgICAgICBpc0Nsb3NlZCxcbiAgICAgICAgICAgICAgICBjbGllbnRzLFxuICAgICAgICAgICAgICAgIG5vdFBheUFsbENsaWVudHMsXG4gICAgICAgICAgICAgICAgaW5nOiBzdGF0ZSQgPT09ICfov5vooYzkuK0nLFxuICAgICAgICAgICAgICAgIGVuZERhdGU6IHNpbXBsZVRpbWUoIGVuZF9kYXRlICksXG4gICAgICAgICAgICAgICAgc3RhcnREYXRlOiBzaW1wbGVUaW1lKCBzdGFydF9kYXRlICksXG4gICAgICAgICAgICAgICAgZW5kRGF0ZTI6IHNpbXBsZVRpbWUyKCBlbmRfZGF0ZSApLFxuICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZTI6IHNpbXBsZVRpbWUyKCBzdGFydF9kYXRlICksXG4gICAgICAgICAgICAgICAgcmVkOiBzdGF0ZSQgPT09ICfmnKrlj5HluIMnIHx8IHN0YXRlJCA9PT0gJ+i/m+ihjOS4rScgfHwgc3RhdGUkID09PSAn5Y2z5bCG5byA5aeLJyxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBtZXRhO1xuICAgIH0sXG5cbiAgICAvKiog5pCc57Si6L6T5YWlICovXG4gICAgb25JbnB1dCh7IGRldGFpbCB9KSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgICAgICAgc2VhcmNoOiBkZXRhaWwudmFsdWUsXG4gICAgICAgICAgICBjYW5Mb2FkTW9yZTogZGV0YWlsLnZhbHVlLnJlcGxhY2UoL1xccysvZywgXCJcIikgIT09IHRoaXMuZGF0YS5sYXN0U2VhcmNoXG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICAvKiog54K55Ye76K+m5oOFICovXG4gICAgb25UYWIoeyBjdXJyZW50VGFyZ2V0LCBkZXRhaWwgfSkge1xuICAgICAgICBjcmVhdGVGb3JtSWQoIGRldGFpbC5mb3JtSWQgKTtcbiAgICAgICAgY29uc3QgeyB0aWQgfSA9IGN1cnJlbnRUYXJnZXQuZGF0YXNldDtcbiAgICAgICAgbmF2VG8oYC9wYWdlcy9tYW5hZ2VyLXRyaXAtZGV0YWlsL2luZGV4P2lkPSR7dGlkfWApO1xuICAgIH0sXG5cbiAgICAvKiog6Lez5Yqo6K+m5oOF55qE6K6i5Y2VICovXG4gICAgZ29PcmRlcih7IGN1cnJlbnRUYXJnZXQsIGRldGFpbCB9KSB7XG4gICAgICAgIGNvbnN0IHsgdGlkIH0gPSBjdXJyZW50VGFyZ2V0LmRhdGFzZXQ7XG4gICAgICAgIGNyZWF0ZUZvcm1JZCggZGV0YWlsLmZvcm1JZCApO1xuICAgICAgICBuYXZUbyhgL3BhZ2VzL21hbmFnZXItdHJpcC1vcmRlci9pbmRleD9pZD0ke3RpZH1gKTtcbiAgICB9LFxuICBcbiAgICAvKipcbiAgICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWKoOi9vVxuICAgICAqL1xuICAgIG9uTG9hZDogZnVuY3Rpb24gKCApIHtcbiAgICAgICAgd3guaGlkZVNoYXJlTWVudSh7IH0pO1xuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yid5qyh5riy5p+T5a6M5oiQXG4gICAgICovXG4gICAgb25SZWFkeTogZnVuY3Rpb24gKCApIHtcbiAgXG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLmmL7npLpcbiAgICAgKi9cbiAgICBvblNob3c6IGZ1bmN0aW9uICggKSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgICAgICAgcGFnZTogMCxcbiAgICAgICAgICAgIGNhbkxvYWRNb3JlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmZldGNoRGF0YSggKTtcbiAgICB9LFxuICBcbiAgICAvKipcbiAgICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdoumakOiXj1xuICAgICAqL1xuICAgIG9uSGlkZTogZnVuY3Rpb24gKCApIHtcbiAgXG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLljbjovb1cbiAgICAgKi9cbiAgICBvblVubG9hZDogZnVuY3Rpb24gKCApIHtcbiAgXG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICog6aG16Z2i55u45YWz5LqL5Lu25aSE55CG5Ye95pWwLS3nm5HlkKznlKjmiLfkuIvmi4nliqjkvZxcbiAgICAgKi9cbiAgICBvblB1bGxEb3duUmVmcmVzaDogZnVuY3Rpb24gKCApIHtcbiAgXG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICog6aG16Z2i5LiK5ouJ6Kem5bqV5LqL5Lu255qE5aSE55CG5Ye95pWwXG4gICAgICovXG4gICAgb25SZWFjaEJvdHRvbTogZnVuY3Rpb24gKCApIHtcbiAgXG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICog55So5oi354K55Ye75Y+z5LiK6KeS5YiG5LqrXG4gICAgICovXG4gICAgLy8gb25TaGFyZUFwcE1lc3NhZ2U6IGZ1bmN0aW9uICgpIHtcbiAgXG4gICAgLy8gfVxufSkiXX0=