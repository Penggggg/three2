"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
var http_1 = require("../../util/http");
var route_js_1 = require("../../util/route.js");
Page({
    data: {
        page: 0,
        totalPage: 1,
        search: '',
        list: [],
        loadingList: false,
        canLoadMore: true,
        lastSearch: '',
        isNotAvailableTrip: false,
        bgs: [
            'background-image: linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%);',
            'background-image: linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%);',
            'background-image: linear-gradient(120deg, #89f7fe 0%, #66a6ff 100%);',
            'background-image: linear-gradient(to top, #37ecba 0%, #72afd3 100%);',
            'background-image: linear-gradient(-45deg, #FFC796 0%, #FF6B95 100%);',
            'background-image: linear-gradient(-225deg, #20E2D7 0%, #F9FEA5 100%);',
            'background-image: linear-gradient(-225deg, #9EFBD3 0%, #57E9F2 48%, #45D4FB 100%);',
        ],
        showSuccess: false
    },
    navigate: function (e) {
        route_js_1.navTo('/pages/manager-trip-detail/index');
    },
    onConformSearch: function (_a) {
        var detail = _a.detail;
        this.setData({
            page: 0,
            totalPage: 0,
            search: detail,
            canLoadMore: true
        });
        this.fetchData();
    },
    fetchData: function () {
        var _this = this;
        var _a = this.data, canLoadMore = _a.canLoadMore, loadingList = _a.loadingList, lastSearch = _a.lastSearch, search = _a.search;
        if (loadingList || !canLoadMore) {
            return;
        }
        if (search.replace(/\s+/g, "") !== lastSearch) {
            this.setData({
                page: 0,
                totalPage: 1
            });
        }
        this.setData({
            loadingList: true
        });
        http_1.http({
            data: {
                page: this.data.page + 1,
                title: this.data.search
            },
            errMsg: '加载失败，请重试',
            loadingMsg: '加载中...',
            url: "trip_list",
            success: function (res) {
                var status = res.status, data = res.data;
                if (status === 200) {
                    var page = data.page, totalPage = data.totalPage, search_1 = data.search;
                    _this.setData({
                        page: page,
                        totalPage: totalPage,
                        lastSearch: search_1 || '',
                        canLoadMore: totalPage > page,
                        isNotAvailableTrip: !data.data.some(function (x) { return x.published === true && new Date().getTime() < x.start_date; })
                    });
                    if (data.data && data.data.length > 0) {
                        var meta = page === 1 ?
                            _this.dealListText(data.data) : _this.data.list.concat(_this.dealListText(data.data));
                        _this.setData({
                            list: meta
                        });
                    }
                    else {
                        _this.setData({
                            list: []
                        });
                    }
                }
                _this.setData({
                    loadingList: false
                });
            }
        });
    },
    dealListText: function (list) {
        var simpleTime = function (ts) {
            var time = new Date(Number(ts));
            return time.getMonth() + 1 + "\u6708" + time.getDate() + "\u65E5";
        };
        var simpleTime2 = function (ts) {
            var time = new Date(Number(ts));
            return time.getMonth() + 1 + "." + time.getDate();
        };
        var meta = list.map(function (x, k) {
            var _id = x._id, type = x.type, title = x.title, sales_volume = x.sales_volume, start_date = x.start_date, published = x.published, end_date = x.end_date, orders = x.orders, isClosed = x.isClosed, clients = x.clients, notPayAllClients = x.notPayAllClients;
            var state$ = !published ?
                '未发布' :
                isClosed ?
                    '已关闭' :
                    new Date().getTime() >= end_date ?
                        '已结束' :
                        new Date().getTime() >= start_date ?
                            '进行中' :
                            '即将开始';
            return {
                _id: _id,
                title: title,
                orders: orders,
                bg: k % 7,
                sales_volume: sales_volume,
                state: state$,
                isClosed: isClosed,
                clients: clients,
                notPayAllClients: notPayAllClients,
                ing: state$ === '进行中',
                endDate: simpleTime(end_date),
                startDate: simpleTime(start_date),
                endDate2: simpleTime2(end_date),
                startDate2: simpleTime2(start_date),
                red: state$ === '未发布' || state$ === '进行中' || state$ === '即将开始',
                label: type === 'sys' ? '自动创建' : ''
            };
        });
        return meta;
    },
    onInput: function (_a) {
        var detail = _a.detail;
        this.setData({
            search: detail.value,
            canLoadMore: detail.value.replace(/\s+/g, "") !== this.data.lastSearch
        });
    },
    onTab: function (_a) {
        var currentTarget = _a.currentTarget, detail = _a.detail;
        var tid = currentTarget.dataset.tid;
        if (!tid) {
            return;
        }
        route_js_1.navTo("/pages/manager-trip-detail/index?id=" + tid);
    },
    goOrder: function (_a) {
        var currentTarget = _a.currentTarget, detail = _a.detail;
        var tid = currentTarget.dataset.tid;
        route_js_1.navTo("/pages/manager-trip-order/index?id=" + tid);
    },
    onSubscribe: function () {
        app.getSubscribe('newOrder,trip,getMoney');
    },
    onLoad: function (query) {
        wx.hideShareMenu({});
        this.setData({
            showSuccess: String(query.s) === '1'
        });
    },
    onReady: function () {
    },
    onShow: function () {
        this.setData({
            page: 0,
            canLoadMore: true
        });
        this.fetchData();
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
        this.setData({
            showSuccess: false
        });
        return {
            title: '超值拼团～进来看看吧',
            path: '/pages/ground-pin/index',
            imageUrl: 'https://global-1257764567.cos.ap-guangzhou.myqcloud.com/share.png'
        };
    }
});
//# sourceMappingURL=data:application/json;base64,